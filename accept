/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        int i,j;
        
        ListNode *ret;
        ListNode *temp1=l1;
        ListNode *temp2=l2;
        int num1=0;
        int num2=0;
        while(1)
        {
            if(l1==NULL)
            {
                break;
            }
            l1=l1->next;
            num1++;
        }
        while(1)
        {
            if(l2==NULL)
            {
                break;
            }
            l2=l2->next;
            num2++;
        }
        int numbig=num1>num2?num1:num2;
        int numsmall=num1<num2?num1:num2;
        int flag=0;
        int val;
        
        ListNode *output=new ListNode((temp1->val+temp2->val)%10);
        ret=output;
        if(temp1->val+temp2->val>=10)
        {
            flag=1;
        }
        temp1=temp1->next;
        temp2=temp2->next;
        for(i=2;i<=numsmall;i++)
        {
            val=(temp1->val+temp2->val+flag)%10;
            if(temp1->val+temp2->val+flag>=10)
            {
                flag=1;
            }
            else
            {
                flag=0;
            }
            ListNode *temp=new ListNode(val);
            output->next=temp;
            output=temp;
            temp1=temp1->next;
            temp2=temp2->next;
        }
        //printf("%d\n",output->val);
        for(i=1;i<=numbig-numsmall;i++)
        {
            if(num1>num2)
            {
                printf("debug:%d,%d\n",temp1->val,flag);
                 val=(temp1->val+flag)%10;
                printf("ddebug:%d\n",val);
                 if(temp1->val+flag>=10)
                 {
                     flag=1;
                 }
                 else
                 {
                     flag=0;
                 }
                 ListNode *temp=new ListNode(val);
                 output->next=temp;
                 output=temp;
                printf("%d\n",output->val);
                temp1=temp1->next;
            }
            else
            {
                val=(temp2->val+flag)%10;
                 if(temp2->val+flag>=10)
                 {
                     flag=1;
                 }
                 else
                 {
                     flag=0;
                 }
                 ListNode *temp=new ListNode(val);
                 output->next=temp;
                 output=temp;
                temp2=temp2->next;
            }
        }
        if(flag==1)
        {
            ListNode *temp=new ListNode(1);
            output->next=temp;
            //output==output->next;
        }
        return ret;
    }
};
